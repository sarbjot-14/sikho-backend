// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sikho_backend.Models;

#nullable disable

namespace sikho_backend.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20230916001359_TestingCompany")]
    partial class TestingCompany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("sikho_backend.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("image_link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<string>("video_link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website_link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IndustryId = 1,
                            image_link = "https://lh3.googleusercontent.com/J0ugh3MHXa6tgOeXoP0aS27NCHNURCHOl-bTqgLW2R8ACZFn2FxwTJWn9DGHA4tG7h6zvxiZrndU_HKwzXpJDbDvSrqQJWR3ItKz5fud=rw-w2880-e365",
                            name = "Waylmo",
                            type = 2,
                            video_link = "https://www.youtube.com/embed/uKfAJDEkstg",
                            website_link = "https://waymo.com/"
                        },
                        new
                        {
                            Id = 2,
                            IndustryId = 1,
                            image_link = "https://images.ctfassets.net/95kuvdv8zn1v/5o4wKdIkXUT7V2WZQciD9b/9007ad36565c4b0f4600a42f96b0adc5/brand_assets_icon_f3f5f8_bg.png?fit=fill&f=center&fm=jpg",
                            name = "Cruise",
                            type = 2,
                            video_link = "https://www.youtube.com/embed/HfcAsfmYbUA",
                            website_link = "https://getcruise.com/"
                        });
                });

            modelBuilder.Entity("sikho_backend.Models.DataPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("cost")
                        .HasColumnType("int");

                    b.Property<string>("cost_source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("units")
                        .HasColumnType("int");

                    b.Property<string>("units_source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("year")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("DataPoints");
                });

            modelBuilder.Entity("sikho_backend.Models.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("cost_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("revenue_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<string>("unit_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            cost_title = "Average Cost per Trip",
                            revenue_title = "Estimated Total Sales",
                            type = 1,
                            unit_title = "Trips Completed"
                        },
                        new
                        {
                            Id = 2,
                            cost_title = "Sales per Location",
                            revenue_title = "Estimated Total Sales",
                            type = 2,
                            unit_title = "Number of Locations"
                        });
                });

            modelBuilder.Entity("sikho_backend.Models.Company", b =>
                {
                    b.HasOne("sikho_backend.Models.Industry", "Industry")
                        .WithMany("Companies")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("sikho_backend.Models.DataPoint", b =>
                {
                    b.HasOne("sikho_backend.Models.Company", "Company")
                        .WithMany("DataPoints")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("sikho_backend.Models.Company", b =>
                {
                    b.Navigation("DataPoints");
                });

            modelBuilder.Entity("sikho_backend.Models.Industry", b =>
                {
                    b.Navigation("Companies");
                });
#pragma warning restore 612, 618
        }
    }
}
